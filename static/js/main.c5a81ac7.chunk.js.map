{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","Movie","id","year","title","summary","poster","genres","to","pathname","state","class","src","alt","className","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAMeA,MAJf,WACI,OAAO,sF,iFCoCIC,MAlCf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACA,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAWP,GACnBQ,MAAO,CACHP,KAAKA,EACLC,MAAMA,EACNC,QAAQA,EACRC,OAAOA,EACPC,OAAOA,IAPf,SAUI,sBAAKI,MAAM,QAAX,UACI,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IADzC,OAEI,sBAAKU,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BV,IAC7B,oBAAIU,UAAU,aAAd,SAA4BX,IAC5B,oBAAIW,UAAU,eAAd,SAA8BP,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OAAmB,qBAAgBH,UAAU,eAA1B,UAA0CG,EAAOD,IAAxCC,QACrE,oBAAGH,UAAU,gBAAb,UAA8BT,EAAQa,MAAM,EAAE,KAA9C,kBCmFDC,G,mNAjGbT,MAAQ,CACNU,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,yEADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,OAAOA,EAAQD,WAAW,IAF/B,2C,kEAMVQ,KAAKN,c,+BAGE,IAAD,EACsBM,KAAKlB,MAA1BU,EADD,EACCA,UAAWC,EADZ,EACYA,OAElB,OACA,yBAASP,UAAU,YAAnB,SACGM,EACE,qBAAKN,UAAU,SAAf,SACC,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACGO,EAAON,KAAI,SAAAc,GACZ,OACC,cAAC,EAAD,CAEC3B,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,QANTsB,EAAM3B,e,GA9BF6B,IAAMC,YCiBVC,G,yLAnBS,IAAD,EACcL,KAAKM,MAA1BC,EADO,EACPA,SAAUC,EADH,EACGA,aACIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAIZ,IACEH,EAAYP,KAAKM,MAAjBC,SACP,OAAIA,EAASzB,MACF,+BAAOyB,EAASzB,MAAMN,QAGtB,S,GAfE2B,IAAMC,YCOZO,MAPf,WACI,OAAO,gCACH,cAAC,IAAD,CAAM/B,GAAG,IAAT,kBADG,aAEH,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCUOgC,MATf,WACE,OAAO,eAAC,IAAD,WACL,cAAC,EAAD,IADK,YAEL,cAAC,IAAD,CAAOC,KAAM,IAAIC,OAAO,EAAMC,UAAWxB,IAFpC,YAGL,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW3C,IAH3B,OAIL,cAAC,IAAD,CAAOyC,KAAK,aAAaE,UAAWV,QCRxCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c5a81ac7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction About(){\r\n    return <span>About this page: I built if because I loce movies</span>\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return (\r\n    <Link to={{\r\n        pathname:`/movie/${id}`,\r\n        state: {\r\n            year:year,\r\n            title:title,\r\n            summary:summary,\r\n            poster:poster,\r\n            genres:genres\r\n        }\r\n    }}>\r\n        <div class=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>    {/* alt와 title은 이미지에 커서 올렸을 때 뜨는 이름표시 */}\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">{genres.map((genre, index) => (<li key={index} className=\"genres_genre\">{index}{genre}</li>))}</ul>\r\n                <p className=\"movie_summary\">{summary.slice(0,140)}...</p>\r\n            </div>\r\n        </div>\r\n    </Link>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired, \r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport { checkPropTypes } from \"prop-types\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  \r\n  state = {\r\n    isLoading: true,\r\n    movies: [] \r\n  };\r\n  \r\n  getMovies = async() =>{\r\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies:movies, isLoading: false});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getMovies(); \r\n  }\r\n\r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    const number = 1;\r\n    return (\r\n    <section className=\"container\">\r\n      {isLoading \r\n      ? (<div className=\"loader\">\r\n          <span className=\"loader_text\">Loading...</span>\r\n        </div>\r\n    ) :(\r\n      <div className=\"movies\">\r\n        {movies.map(movie => {\r\n        return(\r\n         <Movie \r\n          key={movie.id}\r\n          id={movie.id} \r\n          year={movie.year} \r\n          title={movie.title} \r\n          summary={movie.summary} \r\n          poster={movie.medium_cover_image}\r\n          genres={movie.genres}\r\n          />\r\n        )\r\n      })}    \r\n      </div>\r\n    )}\r\n    </section>\r\n    )\r\n  };\r\n}\r\n\r\n\r\n//==============================================================================================================\r\n// class App extends React.Component{\r\n//   state = {\r\n//     count: 0\r\n//   };\r\n\r\n//   add = () => {\r\n//     this.setState(current =>({count : current.count + 1} ));\r\n//   };\r\n\r\n//   minus =()=>{\r\n//     this.setState(current =>({count : current.count - 1} ));\r\n//   };\r\n  \r\n//   render(){\r\n//     return <div>\r\n//       <h1>The number is {this.state.count}</h1>\r\n//       <button onClick={this.add}>Add</button>\r\n//       <button onClick={this.minus}>Minus</button>\r\n//     </div>\r\n//   };\r\n// }\r\n// =============================================================================================\r\n// function Food({name, picture, rating}) {\r\n//   return <div>\r\n//     <h3>I like {name}!!</h3>\r\n//     <h4>{rating}/5.0</h4>\r\n//     <img src={picture} alt={name} />\r\n//   </div>;\r\n// }\r\n\r\n// const food_list = [\r\n//   {name: \"spaghetti\", image:\"https://recipe1.ezmember.co.kr/cache/recipe/2019/03/21/4f83c21285bb647c0d60d934b12ee18a1.jpg\", rating:5},\r\n//   {name: \"samgyeapsal\", image:\"https://lh3.googleusercontent.com/proxy/GEg-GC-OhRn6IruX2cpBmveGEA7GaBkY7_tnELNYb3-3VWLAwXXELDZarRh7q18JkwRNKkW2JP7I3Mf7jDmPQqxBWu6huqAMRcnnu2E5DSErtSdtr_VPtKGxKPPj-1ddipUmEJLBXQ\", rating:4.9},\r\n//   {name: \"pizza\", image:\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Supreme_pizza.jpg/1200px-Supreme_pizza.jpg\", rating: 4.8}\r\n// ];\r\n\r\n// Food.propTypes ={\r\n//   name: PropTypes.string.isRequired,\r\n//   picture: PropTypes.string.isRequired,\r\n//   rating: PropTypes.number.isRequired\r\n// }; \r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {food_list.map(food => (<Food key={food.id} name={food.name} picture={food.image} rating={food.rating} /> ) ) }\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default Home;","import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const { location, history } =this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {location} = this.props;\r\n        if (location.state){\r\n            return <span>{location.state.title}</span>\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction  Navigation (){\r\n    return <div>\r\n        <Link to=\"/\">Home</Link>          {/*Link가 아니라 a태그를 사용했다면 해당 a를 누를 때마다 페이지가 새로고침 되어 속도저하를 야기 Link는 이를 해결 */}\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n}\r\n\r\nexport default Navigation;"," \nimport {HashRouter, Route} from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App(){\n  return <HashRouter>\n    <Navigation />         {/*Link는 HashRouter안에 즉, 라우터 안에 있어야만 사용가능 */}\n    <Route path =\"/\" exact={true} component={Home} />         {/*route의 역할은 path로 지정해 준 것은 url을 의미하고 component가 그 url로 갔을 때 렌더링하는 컴포넌트를 나타내는 것이다.*/ }\n    <Route path=\"/about\" component={About} />    {/*이렇게만 하면 main url(/)에서는 home 컴포넌트가 잘 렌더링 되지만 /about url에서는 home과 about 컴포넌트가 같이 렌더링 된다. 이는 Route의 특성 떄문에 그런데 Route는 url을 비교할 때 url이 동일한 것의 명령어를 찾았어도 그 다음 명령어도 비교해보기 때문에 포함되는 url이 있으면 다 렌더링 하게 된다. 이때, exact를 쓰면 뒤에 /something이 붙어도 인식X*/}\n    <Route path=\"/movie/:id\" component={Detail} />\n  </HashRouter>\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}